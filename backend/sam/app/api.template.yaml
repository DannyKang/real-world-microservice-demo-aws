AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  This template creates API Gateway and Lambda resources for the backend service.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: realworld-serverless-application-backend-api
    Description: >-
      This template creates API Gateway and Lambda resources for the backend service.
    Author: AWS Serverless Application Repository
    SpdxLicenseId: Apache-2.0
    Labels: [github, serverless, sam]
    HomePageUrl: https://github.com/awslabs/realworld-serverless-application
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/awslabs/realworld-serverless-application/tree/1.0.0
    LicenseUrl: ../../../LICENSE
    ReadmeUrl: ../../README.md

Parameters:
  Stage:
    Type: String
    Description: The stage where the application is running in, e.g., dev, prod.
Conditions:
  IsProd:
    !Equals [!Ref Stage, "prod"]
Resources:

  ApiLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: '../../target/realworld-serverless-application-backend-1.0.0.jar'
      Handler: 'software.amazon.serverless.apprepo.container.ApiLambdaHandler::handleRequest'
      MemorySize: 1536
      Timeout: 30
      Runtime: java8
      Tracing: Active # Enable AWS X-Ray to help debug API requests
      Environment:
        Variables:
          STAGE: !Ref Stage
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub "applications/apprepo/${Stage}/*"
        - DynamoDBCrudPolicy:
            TableName: !Sub "{{resolve:ssm:/applications/apprepo/${Stage}/ddb/Applications/TableName:1}}"
        - Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
              - kms:Encrypt
              - kms:Decrypt
              Resource: !GetAtt PaginationKey.Arn

      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: true
        # Use AllAtOnce in non-production environment to accelerate deployment
        Type: !If [IsProd, Canary10Percent15Minutes, AllAtOnce]
        
    DependsOn: PaginationTokenTtlInSeconds
  PaginationKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "Encrypt and decrypt pagination tokens for List APIs."
      EnableKeyRotation: 'true'
      KeyPolicy:
        Version: "2012-10-17"
        Id: key-policy
        Statement:
          - Sid: Enable Root User Permissions
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
  # This role allows API Gateway to push execution and access logs to CloudWatch logs
  ApiGatewayPushToCloudWatchRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: "Push logs to CloudWatch logs from API Gateway"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"



  # Storing resources names to SSM
  ApiLambdaName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionName"
      Type: "String"
      Value: !Ref ApiLambda
      Description: "ApiLambda function name"
  ApiLambdaArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionArn"
      Type: "String"
      Value: !Ref ApiLambda
      Description: "ApiLambda function ARN"
  ApiLambdaVersion:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/lambda/ApiLambda/FunctionVersion"
      Type: "String"
      Value: !Ref ApiLambda.Version
      Description: "ApiLambda function version for alias live"





  PaginationKeyId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/kms/pagination/KeyId"
      Type: "String"
      Value: !Ref PaginationKey
      Description: "KMS pagination key Id."
  PaginationKeyArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/kms/pagination/KeyArn"
      Type: "String"
      Value: !GetAtt PaginationKey.Arn
      Description: "KMS pagination key ARN."
  PaginationTokenTtlInSeconds:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/applications/apprepo/${Stage}/configuration/pagination/TtlInSeconds"
      Type: "String"
      Value: 360
      Description: "Pagination token TTL in seconds. The pagination token is used in List APIs."
